<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.student.management.repository.StudentRepository">

  <!-- 受講生の全件検索 -->
  <select id="search" resultType="raisetech.student.management.data.Student">
    SELECT * FROM students
  </select>

  <!-- 受講生の条件検索 -->
  <select id="searchStudentByCondition" resultType="raisetech.student.management.data.Student">
    SELECT * FROM students
    <where>
      <if test="name != null and name != ''">AND name LIKE CONCAT('%', #{name}, '%')</if>
      <if test="kanaName != null and kanaName != ''">AND kana_name LIKE CONCAT('%', #{kanaName}, '%')</if>
      <if test="nickname != null and nickname != ''">AND nickname LIKE CONCAT('%', #{nickname}, '%')</if>
      <if test="email != null and email != ''">AND email LIKE CONCAT('%', #{email}, '%')</if>
      <if test="area != null and area != ''">AND area = #{area}</if>
      <if test="age != null">AND age = #{age}</if>
      <if test="gender != null and gender != ''">AND gender = #{gender}</if>
      <if test="remark != null and remark != ''">AND remark LIKE CONCAT('%', #{remark}, '%')</if>
      <if test="isDeleted != null">AND is_deleted = #{isDeleted}</if>
    </where>
    ORDER BY id
  </select>

  <!-- 受講生の検索 -->
  <select id="searchStudent" resultType="raisetech.student.management.data.Student">
    SELECT * FROM students WHERE id = #{id}
  </select>

  <!-- 受講生コース情報の全件検索 -->
  <select id="searchStudentCourseList" resultType="raisetech.student.management.data.StudentCourse">
    SELECT * FROM students_courses
  </select>

  <!-- 受講生コースの条件検索 -->
  <select id="searchStudentCourseByCondition" resultType="raisetech.student.management.data.StudentCourse">
    SELECT * FROM students_courses
    <where>
      <if test="courseName != null and courseName != ''">AND course_name LIKE CONCAT('%', #{courseName}, '%')</if>
      <if test="courseStartAt != null and courseStartAt != ''">AND course_start_at &gt;= #{courseStartAt}</if>
      <if test="courseEndAt != null and courseEndAt != ''">AND course_end_at &lt;= #{courseEndAt}</if>
    </where>
  </select>

  <!-- 受講生IDに紐づく受講生コース情報の検索 -->
  <select id="searchStudentCourse" resultType="raisetech.student.management.data.StudentCourse">
    SELECT * FROM students_courses WHERE student_id = #{studentId}
  </select>

  <!-- 受講生の新規登録 -->
  <insert id="registerStudent" parameterType="raisetech.student.management.data.Student" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO students (name, kana_name, nickname, email, area, age, gender, remark, is_deleted)
    VALUES (#{name}, #{kanaName}, #{nickname}, #{email}, #{area}, #{age}, #{gender}, #{remark}, false)
  </insert>

  <!-- 受講生コース情報の新規登録 -->
  <insert id="registerStudentCourse" parameterType="raisetech.student.management.data.StudentCourse" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO students_courses (student_id, course_name, course_start_at, course_end_at)
    VALUES (#{studentId}, #{courseName}, #{courseStartAt}, #{courseEndAt})
  </insert>

  <!-- 受講生の更新 -->
  <update id="updateStudent" parameterType="raisetech.student.management.data.Student">
    UPDATE students SET name = #{name}, kana_name = #{kanaName}, nickname = #{nickname}, email = #{email},
    area = #{area}, age = #{age}, gender = #{gender}, remark = #{remark}, is_deleted = #{isDeleted} WHERE id = #{id}
  </update>

  <!-- 受講生コース情報の更新 -->
  <update id="updateStudentCourse" parameterType="raisetech.student.management.data.StudentCourse">
    UPDATE students_courses SET course_name = #{courseName} WHERE id = #{id}
  </update>
</mapper>